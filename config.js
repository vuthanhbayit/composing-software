IDRViewer.config = {"pagecount":229,"title":"Composing Software","author":"Eric Elliott","subject":"","keywords":"","creator":"LaTeX with hyperref package","producer":"XeTeX 0.99999","creationdate":"D:20190224015749-00'00'","moddate":"","trapped":"","fileName":"Composing_Software_by_Eric_Elliott_(z-lib.org).pdf","boundsbookmarks":[{"title":"Table of Contents","page":3,"zoom":"XYZ 110 1073 null"},{"title":"Thank You","page":8,"zoom":"XYZ 110 1073 null"},{"title":"Composing Software: An Introduction","page":9,"zoom":"XYZ 110 1073 null","children":[{"title":"You Compose Software Every Day","page":10,"zoom":"XYZ 110 1073 null"},{"title":"Conclusion","page":17,"zoom":"XYZ 110 1073 null"}]},{"title":"The Dao of Immutability (The Way of the Functional Programmer)","page":18,"zoom":"XYZ 110 1073 null","children":[{"title":"Forward","page":18,"zoom":"XYZ 110 808 null"}]},{"title":"The Rise and Fall and Rise of Functional Programming (Composable Software)","page":20,"zoom":"XYZ 110 1073 null","children":[{"title":"The Rise of Functional Programming","page":20,"zoom":"XYZ 110 671 null"},{"title":"The Fall of Functional Programming","page":23,"zoom":"XYZ 110 1073 null"},{"title":"The Rise of Functional Programming","page":23,"zoom":"XYZ 110 558 null"},{"title":"Functional Programming Has Always Been Alive and Well","page":24,"zoom":"XYZ 110 1073 null"}]},{"title":"Why Learn Functional Programming in JavaScript?","page":25,"zoom":"XYZ 110 1073 null"},{"title":"Pure Functions","page":32,"zoom":"XYZ 110 1073 null","children":[{"title":"What is a Function?","page":32,"zoom":"XYZ 110 818 null"},{"title":"Mapping","page":32,"zoom":"XYZ 110 540 null"},{"title":"Pure Functions","page":33,"zoom":"XYZ 110 427 null"},{"title":"The Trouble with Shared State","page":34,"zoom":"XYZ 110 786 null"},{"title":"Same Input, Same Output","page":35,"zoom":"XYZ 110 951 null"},{"title":"No Side Effects","page":36,"zoom":"XYZ 110 594 null"},{"title":"Conclusion","page":39,"zoom":"XYZ 110 790 null"}]},{"title":"What is Functional Programming?","page":40,"zoom":"XYZ 110 1073 null","children":[{"title":"Pure Functions","page":41,"zoom":"XYZ 110 1073 null"},{"title":"Function Composition","page":41,"zoom":"XYZ 110 800 null"},{"title":"Shared State","page":41,"zoom":"XYZ 110 598 null"},{"title":"Immutability","page":44,"zoom":"XYZ 110 1073 null"},{"title":"Side Effects","page":45,"zoom":"XYZ 110 879 null"},{"title":"Reusability Through Higher Order Functions","page":45,"zoom":"XYZ 110 437 null"},{"title":"Containers, Functors, Lists, and Streams","page":46,"zoom":"XYZ 110 808 null"},{"title":"Declarative vs Imperative","page":47,"zoom":"XYZ 110 594 null"},{"title":"Conclusion","page":48,"zoom":"XYZ 110 281 null"}]},{"title":"A Functional Programmer's Introduction to JavaScript","page":50,"zoom":"XYZ 110 1073 null","children":[{"title":"Expressions and Values","page":50,"zoom":"XYZ 110 701 null"},{"title":"Types","page":51,"zoom":"XYZ 110 633 null"},{"title":"Destructuring","page":52,"zoom":"XYZ 110 273 null"},{"title":"Comparisons and Ternaries","page":53,"zoom":"XYZ 110 248 null"},{"title":"Functions","page":54,"zoom":"XYZ 110 550 null"},{"title":"Currying","page":58,"zoom":"XYZ 110 557 null"},{"title":"Function Composition","page":60,"zoom":"XYZ 110 760 null"},{"title":"Arrays","page":61,"zoom":"XYZ 110 924 null"},{"title":"Method Chaining","page":61,"zoom":"XYZ 110 432 null"},{"title":"Conclusion","page":62,"zoom":"XYZ 110 815 null"}]},{"title":"Higher Order Functions","page":63,"zoom":"XYZ 110 1073 null"},{"title":"Curry and Function Composition","page":66,"zoom":"XYZ 110 1073 null","children":[{"title":"What is a curried function?","page":66,"zoom":"XYZ 110 858 null"},{"title":"What is a partial application?","page":67,"zoom":"XYZ 110 1073 null"},{"title":"What's the Difference?","page":67,"zoom":"XYZ 110 922 null"},{"title":"What is point-free style?","page":67,"zoom":"XYZ 110 704 null"},{"title":"Why do we curry?","page":68,"zoom":"XYZ 110 457 null"},{"title":"Trace","page":70,"zoom":"XYZ 110 1073 null"},{"title":"Curry and Function Composition, Together","page":71,"zoom":"XYZ 110 293 null"},{"title":"Conclusion","page":76,"zoom":"XYZ 110 277 null"}]},{"title":"Abstraction & Composition","page":78,"zoom":"XYZ 110 1073 null","children":[{"title":"Abstraction is simplification.","page":79,"zoom":"XYZ 110 1073 null"},{"title":"Abstraction in Software","page":79,"zoom":"XYZ 110 598 null"},{"title":"Abstraction through composition","page":80,"zoom":"XYZ 110 1073 null"},{"title":"How to Do More with Less Code","page":81,"zoom":"XYZ 110 1073 null"},{"title":"Conclusion","page":82,"zoom":"XYZ 110 849 null"},{"title":"Reduce","page":82,"zoom":"XYZ 110 508 null"},{"title":"Reduce is Versatile","page":83,"zoom":"XYZ 110 575 null"},{"title":"Conclusion","page":87,"zoom":"XYZ 110 845 null"}]},{"title":"Functors & Categories","page":88,"zoom":"XYZ 110 1073 null","children":[{"title":"Why Functors?","page":89,"zoom":"XYZ 110 697 null"},{"title":"Functor Laws","page":92,"zoom":"XYZ 110 139 null"},{"title":"Category Theory","page":94,"zoom":"XYZ 110 338 null"},{"title":"Build Your Own Functor","page":96,"zoom":"XYZ 110 812 null"},{"title":"Curried Map","page":97,"zoom":"XYZ 110 738 null"},{"title":"Conclusion","page":98,"zoom":"XYZ 110 966 null"}]},{"title":"Monads","page":99,"zoom":"XYZ 110 1073 null","children":[{"title":"You're probably already using monads.","page":101,"zoom":"XYZ 110 305 null"},{"title":"What Monads are Made of","page":106,"zoom":"XYZ 110 228 null"},{"title":"Building a Kleisli Composition Function","page":109,"zoom":"XYZ 110 898 null"},{"title":"The Monad Laws","page":112,"zoom":"XYZ 110 735 null"},{"title":"Conclusion","page":115,"zoom":"XYZ 110 172 null"}]},{"title":"The Forgotten History of OOP","page":117,"zoom":"XYZ 110 1073 null","children":[{"title":"The Big Idea","page":118,"zoom":"XYZ 110 263 null"},{"title":"The Essence of OOP","page":120,"zoom":"XYZ 110 1073 null"},{"title":"What OOP Doesn't Mean","page":121,"zoom":"XYZ 110 424 null"},{"title":"What is an object?","page":123,"zoom":"XYZ 110 388 null"},{"title":"We've lost the plot.","page":124,"zoom":"XYZ 110 982 null"}]},{"title":"Object Composition","page":126,"zoom":"XYZ 110 1073 null","children":[{"title":"What is Object Composition?","page":127,"zoom":"XYZ 110 1073 null"},{"title":"Three Different Forms of Object Composition","page":128,"zoom":"XYZ 110 1073 null"},{"title":"Notes on Code Examples","page":128,"zoom":"XYZ 110 317 null"},{"title":"Aggregation","page":129,"zoom":"XYZ 110 296 null"},{"title":"Concatenation","page":131,"zoom":"XYZ 110 298 null"},{"title":"Delegation","page":132,"zoom":"XYZ 110 294 null"},{"title":"Conclusion","page":134,"zoom":"XYZ 110 752 null"}]},{"title":"Factory Functions","page":136,"zoom":"XYZ 110 1073 null","children":[{"title":"Literals for One, Factories for Many","page":137,"zoom":"XYZ 110 549 null"},{"title":"Returning Objects","page":138,"zoom":"XYZ 110 668 null"},{"title":"Destructuring","page":138,"zoom":"XYZ 110 204 null"},{"title":"Computed Property Keys","page":139,"zoom":"XYZ 110 685 null"},{"title":"Default Parameters","page":140,"zoom":"XYZ 110 1014 null"},{"title":"Type Inference","page":141,"zoom":"XYZ 110 1073 null"},{"title":"Factory Functions for Mixin Composition","page":143,"zoom":"XYZ 110 486 null"},{"title":"Conclusion","page":145,"zoom":"XYZ 110 284 null"}]},{"title":"Functional Mixins","page":147,"zoom":"XYZ 110 1073 null","children":[{"title":"Motivation","page":147,"zoom":"XYZ 110 660 null"},{"title":"What are mixins?","page":148,"zoom":"XYZ 110 702 null"},{"title":"What is functional inheritance?","page":149,"zoom":"XYZ 110 365 null"},{"title":"What is a functional mixin?","page":150,"zoom":"XYZ 110 558 null"},{"title":"Composing Functional Mixins","page":151,"zoom":"XYZ 110 583 null"},{"title":"When to Use Functional Mixins","page":152,"zoom":"XYZ 110 770 null"},{"title":"Caveats","page":152,"zoom":"XYZ 110 283 null"},{"title":"Conclusion","page":157,"zoom":"XYZ 110 590 null"}]},{"title":"Why Composition is Harder with Classes","page":158,"zoom":"XYZ 110 1073 null","children":[{"title":"The Delegate Prototype","page":158,"zoom":"XYZ 110 449 null"},{"title":"The .constructor Property","page":160,"zoom":"XYZ 110 755 null"},{"title":"Class to Factory is a Breaking Change","page":163,"zoom":"XYZ 110 699 null"}]},{"title":"Composable Custom Data Types","page":169,"zoom":"XYZ 110 1073 null","children":[{"title":"You can do this with any data type","page":172,"zoom":"XYZ 110 746 null"},{"title":"Composable Currency","page":172,"zoom":"XYZ 110 390 null"}]},{"title":"Lenses","page":174,"zoom":"XYZ 110 1073 null","children":[{"title":"Why Lenses?","page":175,"zoom":"XYZ 110 923 null"},{"title":"Background","page":175,"zoom":"XYZ 110 613 null"},{"title":"Lens Laws","page":176,"zoom":"XYZ 110 1008 null"},{"title":"Composing Lenses","page":178,"zoom":"XYZ 110 702 null"}]},{"title":"Transducers","page":181,"zoom":"XYZ 110 1073 null","children":[{"title":"Why Transducers?","page":182,"zoom":"XYZ 110 782 null"},{"title":"Background and Etymology","page":184,"zoom":"XYZ 110 982 null"},{"title":"A Musical Analogy for Transducers","page":186,"zoom":"XYZ 110 405 null"},{"title":"Transducers compose top-to-bottom.","page":192,"zoom":"XYZ 110 814 null"},{"title":"Transducer Rules","page":192,"zoom":"XYZ 110 536 null"},{"title":"Transducing","page":194,"zoom":"XYZ 110 327 null"},{"title":"The Transducer Protocol","page":196,"zoom":"XYZ 110 1073 null"},{"title":"Conclusion","page":197,"zoom":"XYZ 110 1073 null"}]},{"title":"Elements of JavaScript Style","page":199,"zoom":"XYZ 110 1073 null","children":[{"title":"1. Make the function the unit of composition. One job for each function.","page":199,"zoom":"XYZ 110 314 null"},{"title":"2. Omit needless code.","page":200,"zoom":"XYZ 110 535 null"},{"title":"3. Use active voice.","page":204,"zoom":"XYZ 110 815 null"},{"title":"4. Avoid a succession of loose statements.","page":205,"zoom":"XYZ 110 307 null"},{"title":"5. Keep related code together.","page":207,"zoom":"XYZ 110 1073 null"},{"title":"6. Put statements and expressions in positive form.","page":207,"zoom":"XYZ 110 252 null"},{"title":"7. Use parallel code for parallel concepts.","page":209,"zoom":"XYZ 110 461 null"},{"title":"Conclusion: Code should be simple, not simplistic.","page":210,"zoom":"XYZ 110 821 null"}]},{"title":"Mocking is a Code Smell","page":212,"zoom":"XYZ 110 1073 null","children":[{"title":"TDD should lead to better design.","page":212,"zoom":"XYZ 110 564 null"},{"title":"What is a code smell?","page":213,"zoom":"XYZ 110 932 null"},{"title":"What is a mock?","page":213,"zoom":"XYZ 110 475 null"},{"title":"What is a unit test?","page":214,"zoom":"XYZ 110 1073 null"},{"title":"What is test coverage?","page":214,"zoom":"XYZ 110 683 null"},{"title":"What is tight coupling?","page":215,"zoom":"XYZ 110 876 null"},{"title":"What causes tight coupling?","page":216,"zoom":"XYZ 110 1073 null"},{"title":"What does composition have to do with mocking?","page":216,"zoom":"XYZ 110 263 null"},{"title":"How do we remove coupling?","page":219,"zoom":"XYZ 110 941 null"},{"title":"``Code smells'' are warning signs, not laws. Mocks are not evil.","page":227,"zoom":"XYZ 110 852 null"}]}],"thumbnailType":"jpg","pageType":"html","pageLabels":["i","ii};